// *************************************************//
// *************** { COMEÇO - Package } ************//
// *************************************************//
package br.com.ifba.ipss.view;
// *************************************************//
// *************** { FIM - Package } ***************//
// *************************************************//

// *************************************************//
// ************ { COMEÇO - Imports } ***************//
// *************************************************//
import br.com.ifba.ipss.common.controller.SplashController;
import br.com.ifba.ipss.feature.splash.domain.model.Splash;
import br.com.ifba.ipss.helper.PathHelper;
import br.com.ifba.ipss.helper.ScreenHelper;
import javax.swing.ImageIcon;
// *************************************************//
// ************** { FIM - Imports } ****************//
// *************************************************//

/**
 *
 * @author Giovane Neves
 * @since V0.0.1
 */
public class TelaSplash extends javax.swing.JFrame {

    // *************************************************//
    // ****************** { Atributos } ****************//
    // *************************************************//
    
    private SplashController splashController;
    
    // *************************************************//
    // ****************** { Construtor } ***************//
    // *************************************************//
    
    /**
     * Construtor de TelaSplash
     */
    public TelaSplash() {
        
        initComponents();
        inicializadorPersonalizado();
        
        Splash s = criarSplash();
        splashController = new SplashController(s);
        
        splashController.criarTelaSplash(
                this.pnlBackground
        );
        
        splashController.carregar(
                this, 
                ScreenHelper.pegarTela(ScreenHelper.TELA_INICIAL)
        );
        
    } // TelaSplash
    
    // *************************************************//
    // ******************* { Métodos } *****************//
    // *************************************************//
    public void inicializadorPersonalizado(){
        
        this.setUndecorated(true);
        this.setIconImage(
                new ImageIcon(this.getClass().getResource(PathHelper.LOGO)).getImage()
        );
        pnlBackground.setSize(new java.awt.Dimension(802, 566));
        
    } // inicializadorPersonalizado
    
    public Splash criarSplash(){
        
        Splash s = new Splash();
        s.setImagem(new ImageIcon(getClass().getResource(PathHelper.LOGO)));
        s.setBarraProgresso(prgBarCarregando);
        
        return s;
        
    } // criarSplash
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        prgBarCarregando = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        pnlBackground.setLayout(null);

        prgBarCarregando.setForeground(new java.awt.Color(255, 255, 255));
        pnlBackground.add(prgBarCarregando);
        prgBarCarregando.setBounds(270, 450, 270, 10);

        getContentPane().add(pnlBackground);
        pnlBackground.setBounds(0, 0, 790, 650);

        setSize(new java.awt.Dimension(802, 566));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaSplash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaSplash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaSplash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaSplash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaSplash().setVisible(true);
            }
        });
    } // main

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JProgressBar prgBarCarregando;
    // End of variables declaration//GEN-END:variables
} // class TelaSplash
